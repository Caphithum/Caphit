3 在新数据库中新建一张 user 表,插入几条数据,属性包含:唯一标识(id),姓名(name)性别(sex).年龄(age).联系方式(phone)
-------CREATE DATABASE IF NOT EXISTS example_db;
-------USE example_db;
-------CREATE TABLE IF NOT EXISTS user (
       id INT AUTO_INCREMENT PRIMARY KEY,
       name VARCHAR(100) NOT NULL,
       sex ENUM('male', 'female', 'other') NOT NULL,
       age INT,
       phone VARCHAR(15)
       );
-------INSERT INTO user (name, sex, age, phone) VALUES ('Alice', 'female', 25, '123-456-7890');
       INSERT INTO user (name, sex, age, phone) VALUES ('Bob', 'male', 30, '098-765-4321');
       INSERT INTO user (name, sex, age, phone) VALUES ('Charlie', 'other', 20, '555-555-5555');
4 写出 SQL语句,查询 user 表中所有年龄在 20-30 范围内的用户
-------SELECT * FROM user WHERE age BETWEEN 20 AND 30;
5 写出 SQL 语句，删除 user 表中名字包含“张”的用户
-------DELETE FROM user WHERE name LIKE '%张%';
6 写出 SQL 语句,计算 user 表中所有用户的平均年龄
-------SELECT AVG(age) AS average_age FROM user;
7 写出 SQL语句,查询 user 表中年龄在 20-30 范围内,名字包含“张”的用户,并按照年龄从大到小排序输出
-------SELECT * FROM user WHERE age BETWEEN 20 AND 30 AND name LIKE '%张%' ORDER BY age DESC;
8 新建两张表team 表(id,teamName)和score 表(id,teamid,userid,score)。其中score 表中的 teamid 为指向 team表id 的外键，userid 为指向 user表id的外键
-------CREATE TABLE IF NOT EXISTS team (
       id INT AUTO_INCREMENT PRIMARY KEY,
       teamName VARCHAR(255) NOT NULL
       );
-------CREATE TABLE IF NOT EXISTS score (
       id INT AUTO_INCREMENT PRIMARY KEY,
       teamid INT,
       userid INT,
       score INT,
       FOREIGN KEY (teamid) REFERENCES team(id),
       FOREIGN KEY (userid) REFERENCES user(id)
       );
9 写出 SQL语句,查询 teamName 为“ECNU”的队伍中，年龄小于 20 的用户们。
--------SELECT u.*
        FROM user u
        JOIN score s ON u.id = s.userid
        JOIN team t ON s.teamid = t.id
        WHERE t.teamName = 'ECNU' AND u.age < 20;
10 写出 SQL 语句,计算 teamName为“ECNU”的总分(假设 score 存在 null值,nul值默认为 0 加入计算)。
--------SELECT t.teamName, SUM(COALESCE(s.score, 0)) AS total_score
        FROM team t
        JOIN score s ON t.id = s.teamid
        WHERE t.teamName = 'ECNU';
